// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PresentationApp.Data;

#nullable disable

namespace PresentationApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240929200527_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PresentationApp.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Nickname");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("PresentationApp.Models.Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float?>("EndX")
                        .HasColumnType("real");

                    b.Property<float?>("EndY")
                        .HasColumnType("real");

                    b.Property<string>("Points")
                        .HasColumnType("text");

                    b.Property<Guid>("SlideId")
                        .HasColumnType("uuid");

                    b.Property<float?>("StartX")
                        .HasColumnType("real");

                    b.Property<float?>("StartY")
                        .HasColumnType("real");

                    b.Property<string>("Stroke")
                        .HasColumnType("text");

                    b.Property<string>("Tool")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SlideId");

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("PresentationApp.Models.Presentation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Presentations");
                });

            modelBuilder.Entity("PresentationApp.Models.PresentationUser", b =>
                {
                    b.Property<Guid>("PresentationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("PresentationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PresentationUsers");
                });

            modelBuilder.Entity("PresentationApp.Models.Slide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("PresentationId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PresentationId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("PresentationApp.Models.Line", b =>
                {
                    b.HasOne("PresentationApp.Models.Slide", "Slide")
                        .WithMany("Lines")
                        .HasForeignKey("SlideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slide");
                });

            modelBuilder.Entity("PresentationApp.Models.PresentationUser", b =>
                {
                    b.HasOne("PresentationApp.Models.Presentation", "Presentation")
                        .WithMany("PresentationUsers")
                        .HasForeignKey("PresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresentationApp.Models.ApplicationUser", "User")
                        .WithMany("PresentationUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presentation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PresentationApp.Models.Slide", b =>
                {
                    b.HasOne("PresentationApp.Models.Presentation", "Presentation")
                        .WithMany("Slides")
                        .HasForeignKey("PresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Presentation");
                });

            modelBuilder.Entity("PresentationApp.Models.ApplicationUser", b =>
                {
                    b.Navigation("PresentationUsers");
                });

            modelBuilder.Entity("PresentationApp.Models.Presentation", b =>
                {
                    b.Navigation("PresentationUsers");

                    b.Navigation("Slides");
                });

            modelBuilder.Entity("PresentationApp.Models.Slide", b =>
                {
                    b.Navigation("Lines");
                });
#pragma warning restore 612, 618
        }
    }
}
